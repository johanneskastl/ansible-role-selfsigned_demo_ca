---
# selfsigned_demo_ca/tasks/main.yml

- name: 'Load variables'
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "vars_{{ ansible_distribution | replace(' ', '_') }}{{ ansible_distribution_major_version }}.yml"
    - "vars_{{ ansible_distribution | replace(' ', '_') }}.yml"
    - "vars_{{ ansible_os_family }}{{ ansible_distribution_major_version }}.yml"
    - "vars_{{ ansible_os_family }}.yml"

#
# pre-flight checks
#
- name: 'Fail if variable for ca_key_passphrase is not defined'
  ansible.builtin.fail:
    msg: 'variable for ca_key_passphrase is not defined'
  when: 'ca_key_passphrase is undefined'

#
# backwards compatibility
#
- name: 'Set variable use_ip_address_only if use_IP_address_only is defined'
  ansible.builtin.set_fact:
    use_ip_address_only: "{{ use_IP_address_only }}"
  when:
    - 'use_IP_address_only is defined'
    - 'use_ip_address_only is undefined'

- name: 'Set variable install_packages if install_packages_on_localhost is defined'
  ansible.builtin.set_fact:
    install_packages: "{{ install_packages_on_localhost }}"
  when:
    - 'install_packages_on_localhost is defined'

#
# set variables
#
- name: 'Parse variables'
  ansible.builtin.include_tasks: parse_variables.yml

#
# install packages
#
- name: 'Install python packages required by ansible'
  ansible.builtin.import_tasks: install_python_packages.yml
  become: true
  when: '"localhost" not in ansible_play_hosts or install_packages_on_localhost | bool'

#
# setting up a demo CA
#
- name: 'Generate the demo CA'
  ansible.builtin.import_tasks: generate_demo_ca.yml
  when: 'generate_demo_ca | bool'

#
# creating certificates for the hosts
#
- name: 'Create certificates for hosts'
  ansible.builtin.import_tasks: create_certs_for_hosts.yml
  when: 'create_certs_for_hosts | bool'
